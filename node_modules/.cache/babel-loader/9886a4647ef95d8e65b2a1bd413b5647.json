{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarin\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Projeto-Dio\\\\client\\\\src\\\\components\\\\book.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Button } from \"reactstrap\";\nimport Table from \"./table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(props => {\n  _s();\n\n  const [totalTables, setTotalTables] = useState([]); // User's selections\n\n  const [selection, setSelection] = useState({\n    table: {\n      name: null,\n      id: null\n    },\n    date: new Date(),\n    time: null,\n    location: \"Local\",\n    size: 0\n  }); // User's booking details\n\n  const [booking, setBooking] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\"\n  }); // List of potential locations\n\n  const [locations] = useState([\"Curitiba\", \"Patio\", \"Inside\", \"Bar\"]);\n  const [times] = useState([\"9AM\", \"10AM\", \"11AM\", \"12PM\", \"1PM\", \"2PM\", \"3PM\", \"4PM\", \"5PM\"]); // Basic reservation \"validation\"\n\n  const [reservationError, setReservationError] = useState(false);\n\n  const getDate = _ => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const date = months[selection.date.getMonth()] + \" \" + selection.date.getDate() + \" \" + selection.date.getFullYear();\n    let time = selection.time.slice(0, -2);\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\n    console.log(time);\n    const datetime = new Date(date + \" \" + time);\n    return datetime;\n  };\n\n  const getEmptyTables = _ => {\n    let tables = totalTables.filter(table => table.isAvailable);\n    return tables.length;\n  };\n\n  useEffect(() => {\n    // Check availability of tables from DB when a date and time is selected\n    if (selection.time && selection.date) {\n      (async _ => {\n        let datetime = getDate();\n        let res = await fetch(\"http://localhost:3005/availability\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: datetime\n          })\n        });\n        res = await res.json(); // Filter available tables with location and group size criteria\n\n        let tables = res.tables.filter(table => (selection.size > 0 ? table.capacity >= selection.size : true) && (selection.location !== \"Local\" ? table.location === selection.location : true));\n        setTotalTables(tables);\n      })();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [selection.time, selection.date, selection.size, selection.location]); // Make the reservation if all details are filled out\n\n  const reserve = async _ => {\n    if (booking.name.length === 0 | booking.phone.length === 0 | booking.email.length === 0) {\n      console.log(\"Incomplete Details\");\n      setReservationError(true);\n    } else {\n      const datetime = getDate();\n      let res = await fetch(\"http://localhost:3005/reserve\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ ...booking,\n          date: datetime,\n          table: selection.table.id\n        })\n      });\n      res = await res.text();\n      console.log(\"Reserved: \" + res);\n      props.setPage(2);\n    }\n  }; // Clicking on a table sets the selection state\n\n\n  const selectTable = (table_name, table_id) => {\n    setSelection({ ...selection,\n      table: {\n        name: table_name,\n        id: table_id\n      }\n    });\n  }; // Generate party size dropdown\n\n\n  const getSizes = _ => {\n    let newSizes = [];\n\n    for (let i = 1; i < 8; i++) {\n      newSizes.push( /*#__PURE__*/_jsxDEV(DropdownItem, {\n        className: \"booking-dropdown-item\",\n        onClick: e => {\n          let newSel = { ...selection,\n            table: { ...selection.table\n            },\n            size: i\n          };\n          setSelection(newSel);\n        },\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this));\n    }\n\n    return newSizes;\n  }; // Generate locations dropdown\n\n\n  const getLocations = _ => {\n    let newLocations = [];\n    locations.forEach(loc => {\n      newLocations.push( /*#__PURE__*/_jsxDEV(DropdownItem, {\n        className: \"booking-dropdown-item\",\n        onClick: _ => {\n          let newSel = { ...selection,\n            table: { ...selection.table\n            },\n            location: loc\n          };\n          setSelection(newSel);\n        },\n        children: loc\n      }, loc, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this));\n    });\n    return newLocations;\n  }; // Generate locations dropdown\n\n\n  const getTimes = _ => {\n    let newTimes = [];\n    times.forEach(time => {\n      newTimes.push( /*#__PURE__*/_jsxDEV(DropdownItem, {\n        className: \"booking-dropdown-item\",\n        onClick: _ => {\n          let newSel = { ...selection,\n            table: { ...selection.table\n            },\n            time: time\n          };\n          setSelection(newSel);\n        },\n        children: time\n      }, time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this));\n    });\n    return newTimes;\n  }; // Generating tables from available tables state\n\n\n  const getTables = _ => {\n    console.log(\"Getting tables\");\n\n    if (getEmptyTables() > 0) {\n      let tables = [];\n      totalTables.forEach(table => {\n        if (table.isAvailable) {\n          tables.push( /*#__PURE__*/_jsxDEV(Table, {\n            id: table._id,\n            chairs: table.capacity,\n            name: table.name,\n            empty: true,\n            selectTable: selectTable\n          }, table._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this));\n        } else {\n          tables.push( /*#__PURE__*/_jsxDEV(Table, {\n            id: table._id,\n            chairs: table.capacity,\n            name: table.name,\n            selectTable: selectTable\n          }, table._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this));\n        }\n      });\n      return tables;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      noGutters: true,\n      className: \"text-center align-items-center assento-cta\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"looking-for-assento\",\n          children: [!selection.table.id ? \"Book a Table\" : \"Confirme seus dados\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: !selection.table.id ? \"fas fa-chair assento\" : \"fas fa-clipboard-check assento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected-table\",\n          children: selection.table.id ? \"Você está reservando o \" + selection.table.name : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), reservationError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"reservation-error\",\n          children: \"* Please fill out all of the details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), !selection.table.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reservation-stuff\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"text-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            required: \"required\",\n            className: \"booking-dropdown\",\n            value: selection.date.toISOString().split(\"T\")[0],\n            onChange: e => {\n              if (!isNaN(new Date(new Date(e.target.value)))) {\n                let newSel = { ...selection,\n                  table: { ...selection.table\n                  },\n                  date: new Date(e.target.value)\n                };\n                setSelection(newSel);\n              } else {\n                console.log(\"Invalid date\");\n                let newSel = { ...selection,\n                  table: { ...selection.table\n                  },\n                  date: new Date()\n                };\n                setSelection(newSel);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              color: \"none\",\n              caret: true,\n              className: \"booking-dropdown\",\n              children: selection.time === null ? \"Selecione um horário\" : selection.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              right: true,\n              className: \"booking-dropdown-menu\",\n              children: getTimes()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              color: \"none\",\n              caret: true,\n              className: \"booking-dropdown\",\n              children: selection.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              right: true,\n              className: \"booking-dropdown-menu\",\n              children: getLocations()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              color: \"none\",\n              caret: true,\n              className: \"booking-dropdown\",\n              children: selection.size === 0 ? \"Número de passageiros\" : selection.size.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              right: true,\n              className: \"booking-dropdown-menu\",\n              children: getSizes()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"tables-display\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [getEmptyTables() > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"available-tables\",\n            children: [getEmptyTables(), \" available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this) : null, selection.date && selection.time ? getEmptyTables() > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-key\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"empty-table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 23\n              }, this), \" \\xA0 Available \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"full-table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 23\n              }, this), \" \\xA0 Unavailable \\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              noGutters: true,\n              children: getTables()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"table-display-message\",\n            children: \"Sem reservas dispon\\xEDveis \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"table-display-message\",\n            children: \"Selecione uma data e um hor\\xE1rio para a sua reserva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"confirm-reservation-stuff\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"text-center justify-content-center reservation-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          className: \"reservation-details\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            bsSize: \"lg\",\n            placeholder: \"Nome\",\n            className: \"reservation-input\",\n            value: booking.name,\n            onChange: e => {\n              setBooking({ ...booking,\n                name: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          className: \"reservation-details\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            bsSize: \"lg\",\n            placeholder: \"N\\xFAmero de telefone\",\n            className: \"reservation-input\",\n            value: booking.phone,\n            onChange: e => {\n              setBooking({ ...booking,\n                phone: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          className: \"reservation-details\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            bsSize: \"lg\",\n            placeholder: \"Email\",\n            className: \"reservation-input\",\n            value: booking.email,\n            onChange: e => {\n              setBooking({ ...booking,\n                email: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"none\",\n            className: \"book-table-btn\",\n            onClick: _ => {\n              reserve();\n            },\n            children: \"Finalizar reserva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}, \"ZPNoE6yDjcUxG/w+t+lhO+mws3Y=\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Input","Button","Table","props","totalTables","setTotalTables","selection","setSelection","table","name","id","date","Date","time","location","size","booking","setBooking","phone","email","locations","times","reservationError","setReservationError","getDate","_","months","getMonth","getFullYear","slice","console","log","datetime","getEmptyTables","tables","filter","isAvailable","length","res","fetch","method","headers","body","JSON","stringify","json","capacity","reserve","text","setPage","selectTable","table_name","table_id","getSizes","newSizes","i","push","e","newSel","getLocations","newLocations","forEach","loc","getTimes","newTimes","getTables","_id","toISOString","split","isNaN","target","value","toString"],"sources":["C:/Users/sarin/OneDrive/Área de Trabalho/Projeto-Dio/client/src/components/book.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Input,\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nimport Table from \"./table\";\r\n\r\nexport default props => {\r\n  const [totalTables, setTotalTables] = useState([]);\r\n\r\n  // User's selections\r\n  const [selection, setSelection] = useState({\r\n    table: {\r\n      name: null,\r\n      id: null\r\n    },\r\n    date: new Date(),\r\n    time: null,\r\n    location: \"Local\",\r\n    size: 0\r\n  });\r\n\r\n  // User's booking details\r\n  const [booking, setBooking] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  // List of potential locations\r\n  const [locations] = useState([\"Curitiba\", \"Patio\", \"Inside\", \"Bar\"]);\r\n  const [times] = useState([\r\n    \"9AM\",\r\n    \"10AM\",\r\n    \"11AM\",\r\n    \"12PM\",\r\n    \"1PM\",\r\n    \"2PM\",\r\n    \"3PM\",\r\n    \"4PM\",\r\n    \"5PM\"\r\n  ]);\r\n  // Basic reservation \"validation\"\r\n  const [reservationError, setReservationError] = useState(false);\r\n\r\n  const getDate = _ => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n    const date =\r\n      months[selection.date.getMonth()] +\r\n      \" \" +\r\n      selection.date.getDate() +\r\n      \" \" +\r\n      selection.date.getFullYear();\r\n    let time = selection.time.slice(0, -2);\r\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\r\n    console.log(time);\r\n    const datetime = new Date(date + \" \" + time);\r\n    return datetime;\r\n  };\r\n\r\n  const getEmptyTables = _ => {\r\n    let tables = totalTables.filter(table => table.isAvailable);\r\n    return tables.length;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check availability of tables from DB when a date and time is selected\r\n    if (selection.time && selection.date) {\r\n      (async _ => {\r\n        let datetime = getDate();\r\n        let res = await fetch(\"http://localhost:3005/availability\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            date: datetime\r\n          })\r\n        });\r\n        res = await res.json();\r\n        // Filter available tables with location and group size criteria\r\n        let tables = res.tables.filter(\r\n          table =>\r\n            (selection.size > 0 ? table.capacity >= selection.size : true) &&\r\n            (selection.location !== \"Local\"\r\n              ? table.location === selection.location\r\n              : true)\r\n        );\r\n        setTotalTables(tables);\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selection.time, selection.date, selection.size, selection.location]);\r\n\r\n  // Make the reservation if all details are filled out\r\n  const reserve = async _ => {\r\n    if (\r\n      (booking.name.length === 0) |\r\n      (booking.phone.length === 0) |\r\n      (booking.email.length === 0)\r\n    ) {\r\n      console.log(\"Incomplete Details\");\r\n      setReservationError(true);\r\n    } else {\r\n      const datetime = getDate();\r\n      let res = await fetch(\"http://localhost:3005/reserve\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          ...booking,\r\n          date: datetime,\r\n          table: selection.table.id\r\n        })\r\n      });\r\n      res = await res.text();\r\n      console.log(\"Reserved: \" + res);\r\n      props.setPage(2);\r\n    }\r\n  };\r\n\r\n  // Clicking on a table sets the selection state\r\n  const selectTable = (table_name, table_id) => {\r\n    setSelection({\r\n      ...selection,\r\n      table: {\r\n        name: table_name,\r\n        id: table_id\r\n      }\r\n    });\r\n  };\r\n\r\n  // Generate party size dropdown\r\n  const getSizes = _ => {\r\n    let newSizes = [];\r\n\r\n    for (let i = 1; i < 8; i++) {\r\n      newSizes.push(\r\n        <DropdownItem\r\n          key={i}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={e => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table\r\n              },\r\n              size: i\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {i}\r\n        </DropdownItem>\r\n      );\r\n    }\r\n    return newSizes;\r\n  };\r\n\r\n  // Generate locations dropdown\r\n  const getLocations = _ => {\r\n    let newLocations = [];\r\n    locations.forEach(loc => {\r\n      newLocations.push(\r\n        <DropdownItem\r\n          key={loc}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={_ => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table\r\n              },\r\n              location: loc\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {loc}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n    return newLocations;\r\n  };\r\n\r\n  // Generate locations dropdown\r\n  const getTimes = _ => {\r\n    let newTimes = [];\r\n    times.forEach(time => {\r\n      newTimes.push(\r\n        <DropdownItem\r\n          key={time}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={_ => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table\r\n              },\r\n              time: time\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {time}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n    return newTimes;\r\n  };\r\n\r\n  // Generating tables from available tables state\r\n  const getTables = _ => {\r\n    console.log(\"Getting tables\");\r\n    if (getEmptyTables() > 0) {\r\n      let tables = [];\r\n      totalTables.forEach(table => {\r\n        if (table.isAvailable) {\r\n          tables.push(\r\n            <Table\r\n              key={table._id}\r\n              id={table._id}\r\n              chairs={table.capacity}\r\n              name={table.name}\r\n              empty\r\n              selectTable={selectTable}\r\n            />\r\n          );\r\n        } else {\r\n          tables.push(\r\n            <Table\r\n              key={table._id}\r\n              id={table._id}\r\n              chairs={table.capacity}\r\n              name={table.name}\r\n              selectTable={selectTable}\r\n            />\r\n          );\r\n        }\r\n      });\r\n      return tables;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row noGutters className=\"text-center align-items-center assento-cta\">\r\n        <Col>\r\n          <p className=\"looking-for-assento\">\r\n            {!selection.table.id ? \"Book a Table\" : \"Confirme seus dados\"}\r\n            <i\r\n              className={\r\n                !selection.table.id\r\n                  ? \"fas fa-chair assento\"\r\n                  : \"fas fa-clipboard-check assento\"\r\n              }\r\n            ></i>\r\n          </p>\r\n          <p className=\"selected-table\">\r\n            {selection.table.id\r\n              ? \"Você está reservando o \" + selection.table.name\r\n              : null}\r\n          </p>\r\n\r\n          {reservationError ? (\r\n            <p className=\"reservation-error\">\r\n              * Please fill out all of the details.\r\n            </p>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n\r\n      {!selection.table.id ? (\r\n        <div id=\"reservation-stuff\">\r\n          <Row noGutters className=\"text-center align-items-center\">\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <input\r\n                type=\"date\"\r\n                required=\"required\"\r\n                className=\"booking-dropdown\"\r\n                value={selection.date.toISOString().split(\"T\")[0]}\r\n                onChange={e => {\r\n                  if (!isNaN(new Date(new Date(e.target.value)))) {\r\n                    let newSel = {\r\n                      ...selection,\r\n                      table: {\r\n                        ...selection.table\r\n                      },\r\n                      date: new Date(e.target.value)\r\n                    };\r\n                    setSelection(newSel);\r\n                  } else {\r\n                    console.log(\"Invalid date\");\r\n                    let newSel = {\r\n                      ...selection,\r\n                      table: {\r\n                        ...selection.table\r\n                      },\r\n                      date: new Date()\r\n                    };\r\n                    setSelection(newSel);\r\n                  }\r\n                }}\r\n              ></input>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.time === null ? \"Selecione um horário\" : selection.time}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getTimes()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.location}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getLocations()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.size === 0\r\n                    ? \"Número de passageiros\"\r\n                    : selection.size.toString()}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getSizes()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row noGutters className=\"tables-display\">\r\n            <Col>\r\n              {getEmptyTables() > 0 ? (\r\n                <p className=\"available-tables\">{getEmptyTables()} available</p>\r\n              ) : null}\r\n\r\n              {selection.date && selection.time ? (\r\n                getEmptyTables() > 0 ? (\r\n                  <div>\r\n                    <div className=\"table-key\">\r\n                      <span className=\"empty-table\"></span> &nbsp; Available\r\n                      &nbsp;&nbsp;\r\n                      <span className=\"full-table\"></span> &nbsp; Unavailable\r\n                      &nbsp;&nbsp;\r\n                    </div>\r\n                    <Row noGutters>{getTables()}</Row>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"table-display-message\">Sem reservas disponíveis </p>\r\n                )\r\n              ) : (\r\n                <p className=\"table-display-message\">\r\n                  Selecione uma data e um horário para a sua reserva\r\n                </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <div id=\"confirm-reservation-stuff\">\r\n          <Row\r\n            noGutters\r\n            className=\"text-center justify-content-center reservation-details-container\"\r\n          >\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Nome\"\r\n                className=\"reservation-input\"\r\n                value={booking.name}\r\n                onChange={e => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    name: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Número de telefone\"\r\n                className=\"reservation-input\"\r\n                value={booking.phone}\r\n                onChange={e => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    phone: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Email\"\r\n                className=\"reservation-input\"\r\n                value={booking.email}\r\n                onChange={e => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    email: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row noGutters className=\"text-center\">\r\n            <Col>\r\n              <Button\r\n                color=\"none\"\r\n                className=\"book-table-btn\"\r\n                onClick={_ => {\r\n                  reserve();\r\n                }}\r\n              >\r\n                Finalizar reserva\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}